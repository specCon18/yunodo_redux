# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.22)
{
  # A helpful description of your flake
  description = "a go calander tui";

  # Flake inputs
  inputs = {
    flake-schemas.url = "https://flakehub.com/f/DeterminateSystems/flake-schemas/*";

    nixpkgs.url = "https://flakehub.com/f/NixOS/nixpkgs/*";
  };

  # Flake outputs that other flakes can use
  outputs =
    {
      self,
      flake-schemas,
      nixpkgs,
    }:
    let
      # Helpers for producing system-specific outputs
      supportedSystems = [ "x86_64-linux" ];
      forEachSupportedSystem =
        f:
        nixpkgs.lib.genAttrs supportedSystems (
          system:
          f {
            inherit (nixpkgs) lib;
            pkgs = import nixpkgs { inherit system; };
          }
        );
    in
    {
      # Schemas tell Nix about the structure of your flake's outputs
      schemas = flake-schemas.schemas;
      packages = forEachSupportedSystem (
        { pkgs, lib }:
        {
          default = pkgs.callPackage (
            { buildGoModule }:
            buildGoModule {
              pname = "yunodo";
              version = "0.0.1";
              src = builtins.path {
                name = "source";
                path = ./.;
              };
              vendorHash = "sha256-m5mBubfbXXqXKsygF5j7cHEY+bXhAMcXUts5KBKoLzM=";
            }
          ) { };
        }
      );
      # Development environments
      devShells = forEachSupportedSystem (
        { pkgs, ... }:
        {
          default = pkgs.mkShell {
            # Pinned packages available in the environment
            packages = with pkgs; [
              just
              gcc
              go_1_23
              nixpkgs-fmt
	      protobuf
	      badger
	      protoc-gen-go
            ];
            env = {
              CGO_ENABLED = "1";
              CC = "gcc";
            };
          };
        }
      );
    };
}
